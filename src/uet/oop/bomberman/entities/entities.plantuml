@startuml

title __ENTITIES's Class Diagram__\n
    abstract class Entity {
        # img : Image
        # x : double
        # y : double
        # id : String
        + Entity(double x, double y, Image img)
        + render()
        {abstract} + update()
    }

    Grass -up-|> Entity
    class Grass {
        + Grass(int x, int y)
        + update()
    }

    Wall -up-|> Entity
    class Wall {
        + Wall(int x, int y)
        + update()
    }

    Brick -up-|> Entity
    class Brick {
        + Brick(int x, int y)
        + update()
    }

    MovingEntity -up-|> Entity
    abstract class MovingEntity {
        # speed: double
        # bombMax: int
        # bombCnt: int
        # bombLength: int

        # moveUp()
        # moveDown()
        # moveLeft()
        # moveRight()
        # placeBomb()
    }

    Bomber -up-|> MovingEntity
    class Bomber {
        - life : int
        + Bomber(double x, double y)
        + update()
    }

    Balloom -up-|> MovingEntity
    class Balloom {
        + Balloom(double x, double y)
        + Update()
    }

    Oneal -up-|> MovingEntity
    class Oneal {
        + Oneal(double x, double y)
        + Update()
    }

    Item -up-|> Entity
    abstract class Item {
        + Item(int x, int y, double img)
        + update()
    }

    SpeedItem -up-|> Item
    class SpeedItem {
        + SpeedItem(int x, int y)
        + Update()
    }

    FlameItem -up-|> Item
    class FlameItem {
        + FlameItem(int x, int y)
        + Update()
    }

    BombItem -up-|> Item
    class BombItem {
        + BombItem(int x, int y)
        + Update()
    }

    Bomb -up-|> Entity
    class Bomb {
        - countDown: int
        - owner: MovingEntity
        + Bomb(int x, int y)
        + Update()
    }

    Flame -up-|> Entity
    class Flame {
        - direction: int
        + Flame(int x, int y, direction)
        + Update()
    }
@enduml
